name: Deploy & Destroy

on:
  push:
    branches:
      - main
env:
  BUCKET_NAME: nokia-assignment-tf-bucket

jobs:
  prerequisites: #create bucket for terraform state file
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create terraform bucket
        run: |
          pip install boto3
          python3 create_bucket.py

  terraform_plan: #terraform init and plan
    runs-on: ubuntu-latest
    needs: prerequisites

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
    
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: Terraform

  terraform_apply: #terraform apply after manual approve
    runs-on: ubuntu-latest
    needs: terraform_plan
    environment: APPLY
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: Terraform


  terraform_destroy: #terraform(and bucket) destroy after manual approve
    runs-on: ubuntu-latest
    needs: terraform_apply
    environment: DESTROY
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: Terraform

      - name: Delete terraform bucket
        run: |
          pip install boto3
          python3 destroy_bucket.py
